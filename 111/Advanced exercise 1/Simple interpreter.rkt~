;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-lambda-reader.ss" "lang")((modname |Simple interpreter|) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
;;;
;;; EECS-111 Advanced Section Exercise 1
;;; A simple interpreter
;;;

(define (eval exp environment)
  (cond [(symbol? exp)
         (lookup exp
                 environment)]
        [(list? exp)
         (eval-complex-expression exp environment)]
        [else
         exp]))

(define (eval-complex-expression exp environment)
  (eval-procedure-call (map (Î» (subexp)
                              (eval subexp
                                    environment))
                            exp)))

(define (eval-procedure-call proc-and-args)
  (apply (first proc-and-args)
         (rest proc-and-args)))

(define (lookup variable-name
                environment)
  (local [(define binding
            (assoc variable-name environment))]
    (if (list? binding)
        (second binding)
        (error "Undefined variable"
               variable-name))))

(define default-environment
  (list (list '+ +)
        (list '- -)
        (list '* *)
        (list '/ /)))

(define (definition->binding definition)
  (if (not (eq?
            (first definition)
            'define))
      (error "Invalid definition"
             definition)
      (list (second definition)
            (eval
             (third definition)
             default-environment))))

(define (program definitions)
  (append (map definition->binding
               definitions)
          default-environment))

(eval '(+ n (* a b))
      (program '((define n
                   7)
                 (define a 4)
                 (define b 3))))